{
    "openapi": "3.1.0",
    "info": {
        "title": "Trading App",
        "version": "0.1.0"
    },
    "paths": {
        "/users/{user_id}": {
            "get": {
                "tags": [
                    "users"
                ],
                "summary": "Get User",
                "operationId": "get_user_users__user_id__get",
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "User Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User-Output"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "users"
                ],
                "summary": "Delete User",
                "operationId": "delete_user_users__user_id__delete",
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "User Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/users/": {
            "post": {
                "tags": [
                    "users"
                ],
                "summary": "Post User",
                "operationId": "post_user_users__post",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/User-Input"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "users"
                ],
                "summary": "Put User",
                "operationId": "put_user_users__put",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/User-Input"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "users"
                ],
                "summary": "Get Users",
                "description": "If you use ORM/DB framework that you need to use paginate function that is specific to your framework. Otherwise,\nyou will need to load all data into memory and then paginate it which is not good for performance.\n\nYou can find more information about intergrations in Avaiable Integrations section.\n\nFor instance, if you use SQLAlchemy you can use paginate from fastapi_pagination.ext.sqlalchemy module.",
                "operationId": "get_users_users__get",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "maximum": 100,
                            "minimum": 1,
                            "description": "Page size limit",
                            "default": 50,
                            "title": "Limit"
                        },
                        "description": "Page size limit"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 0,
                            "description": "Page offset",
                            "default": 0,
                            "title": "Offset"
                        },
                        "description": "Page offset"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LimitOffsetPage_User_"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/trades/": {
            "get": {
                "tags": [
                    "trades"
                ],
                "summary": "Get Trades",
                "operationId": "get_trades_trades__get",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "description": "Page number",
                            "default": 1,
                            "title": "Page"
                        },
                        "description": "Page number"
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "maximum": 100,
                            "minimum": 1,
                            "description": "Page size",
                            "default": 50,
                            "title": "Size"
                        },
                        "description": "Page size"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Page_Trade_"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "trades"
                ],
                "summary": "Post Trades",
                "operationId": "post_trades_trades__post",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Trade"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "Degree": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "title": "Id"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At"
                    },
                    "type_degree": {
                        "$ref": "#/components/schemas/DegreeType"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "created_at",
                    "type_degree"
                ],
                "title": "Degree"
            },
            "DegreeType": {
                "type": "string",
                "enum": [
                    "newbie",
                    "expert"
                ],
                "title": "DegreeType"
            },
            "HTTPValidationError": {
                "properties": {
                    "detail": {
                        "items": {
                            "$ref": "#/components/schemas/ValidationError"
                        },
                        "type": "array",
                        "title": "Detail"
                    }
                },
                "type": "object",
                "title": "HTTPValidationError"
            },
            "LimitOffsetPage_User_": {
                "properties": {
                    "items": {
                        "items": {
                            "$ref": "#/components/schemas/User-Output"
                        },
                        "type": "array",
                        "title": "Items"
                    },
                    "total": {
                        "anyOf": [
                            {
                                "type": "integer",
                                "minimum": 0.0
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Total"
                    },
                    "limit": {
                        "anyOf": [
                            {
                                "type": "integer",
                                "minimum": 1.0
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Limit"
                    },
                    "offset": {
                        "anyOf": [
                            {
                                "type": "integer",
                                "minimum": 0.0
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Offset"
                    }
                },
                "type": "object",
                "required": [
                    "items",
                    "total",
                    "limit",
                    "offset"
                ],
                "title": "LimitOffsetPage[User]"
            },
            "Page_Trade_": {
                "properties": {
                    "items": {
                        "items": {
                            "$ref": "#/components/schemas/Trade"
                        },
                        "type": "array",
                        "title": "Items"
                    },
                    "total": {
                        "anyOf": [
                            {
                                "type": "integer",
                                "minimum": 0.0
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Total"
                    },
                    "page": {
                        "anyOf": [
                            {
                                "type": "integer",
                                "minimum": 1.0
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Page"
                    },
                    "size": {
                        "anyOf": [
                            {
                                "type": "integer",
                                "minimum": 1.0
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Size"
                    },
                    "pages": {
                        "anyOf": [
                            {
                                "type": "integer",
                                "minimum": 0.0
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Pages"
                    }
                },
                "type": "object",
                "required": [
                    "items",
                    "total",
                    "page",
                    "size"
                ],
                "title": "Page[Trade]"
            },
            "Trade": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "title": "Id"
                    },
                    "user_id": {
                        "type": "integer",
                        "title": "User Id"
                    },
                    "currency": {
                        "type": "string",
                        "maxLength": 5,
                        "title": "Currency"
                    },
                    "side": {
                        "type": "string",
                        "title": "Side"
                    },
                    "price": {
                        "type": "number",
                        "minimum": 0.0,
                        "title": "Price"
                    },
                    "amount": {
                        "type": "number",
                        "title": "Amount"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "user_id",
                    "currency",
                    "side",
                    "price",
                    "amount"
                ],
                "title": "Trade"
            },
            "User-Input": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "title": "Id"
                    },
                    "role": {
                        "type": "string",
                        "title": "Role"
                    },
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "degree": {
                        "anyOf": [
                            {
                                "items": {
                                    "$ref": "#/components/schemas/Degree"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Degree",
                        "default": []
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "role",
                    "name"
                ],
                "title": "User"
            },
            "User-Output": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "title": "Id"
                    },
                    "role": {
                        "type": "string",
                        "title": "Role"
                    },
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "degree": {
                        "anyOf": [
                            {
                                "items": {
                                    "$ref": "#/components/schemas/Degree"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Degree",
                        "default": []
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "role",
                    "name"
                ],
                "title": "User"
            },
            "ValidationError": {
                "properties": {
                    "loc": {
                        "items": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "integer"
                                }
                            ]
                        },
                        "type": "array",
                        "title": "Location"
                    },
                    "msg": {
                        "type": "string",
                        "title": "Message"
                    },
                    "type": {
                        "type": "string",
                        "title": "Error Type"
                    }
                },
                "type": "object",
                "required": [
                    "loc",
                    "msg",
                    "type"
                ],
                "title": "ValidationError"
            }
        }
    }
}